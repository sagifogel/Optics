version: 2.1

scala_213: &scala_213
  SCALA_VERSION: 2.13.5

scala_212: &scala_212
  SCALA_VERSION: 2.12.12

jdk_8: &jdk_8
  JDK_VERSION: 8

java_options: &java_options
  _JAVA_OPTIONS: "-XX:+UseG1GC -Xmx1024m"

machine_resource: &machine_resource
  resource_class: medium

machine_ubuntu: &machine_ubuntu
  machine:
    image: ubuntu-1604:202007-01

install_jdk: &install_jdk
  - run:
      name: Install JDK
      command: |
        while $(ps aux | grep -i ' apt ' | grep -v grep > /dev/null); do sleep 1; done # Wait for apt to be ready

        sudo rm /etc/apt/sources.list.d/*
        sudo tee /etc/apt/sources.list > /dev/null \<< 'EOF'
        deb http://mirror.math.princeton.edu/pub/ubuntu/ xenial main universe
        deb http://mirror.math.princeton.edu/pub/ubuntu/ xenial-updates main universe
        deb http://mirror.math.princeton.edu/pub/ubuntu/ xenial-backports main universe
        deb http://mirror.math.princeton.edu/pub/ubuntu/ xenial-security main restricted universe
        EOF

        sudo apt update
        sudo apt install -y openjdk-8-jdk
        java -version

load_cache: &load_cache
  - restore_cache:
      key: sbt-cache-v2

clean_cache: &clean_cache
  - run:
      name: Clean unwanted files from cache
      command: |
        rm -fv $HOME/.ivy2/.sbt.ivy.lock
        find $HOME/.ivy2/cache -name "ivydata-*.properties" -print -delete
        find $HOME/.sbt        -name "*.lock"               -print -delete

save_cache: &save_cache
  - save_cache:
      key: sbt-cache-v2
      paths:
        - "~/.ivy2/cache"
        - "~/.sbt"
        - "~/.m2"
        - "~/.cache"
        - "~/website/node_modules"

install_nodejs: &install_nodejs
  - run:
      name: Install node.js
      command: |
        export NVM_DIR="/opt/circleci/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        nvm use 10
        node -v

install_yarn: &install_yarn
  - run:
      name: Install Yarn
      command: |
        curl -sL https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
        sudo bash -c 'echo "deb https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list'
        sudo apt update && sudo apt install yarn -y
        yarn policies set-version
        yarn -v

lint: &lint
  steps:
    - checkout
    - <<: *load_cache
    - <<: *install_jdk
    - run:
        name: Lint code
        command: |
          sbt ++${SCALA_VERSION}! check
    - <<: *clean_cache
    - <<: *save_cache

testJVM: &testJVM
  steps:
    - checkout
    - <<: *load_cache
    - <<: *install_jdk
    - run:
        name: Run tests
        command: sbt -Dfatal.warnings=true ++${SCALA_VERSION}! testJVM
    - <<: *clean_cache
    - <<: *save_cache

testJS: &testJS
  steps:
    - checkout
    - <<: *load_cache
    - <<: *install_jdk
    - <<: *install_nodejs
    - run:
        name: Run tests
        command: sbt -Dfatal.warnings=true ++${SCALA_VERSION}! testJS
    - <<: *clean_cache
    - <<: *save_cache

mdoc: &mdoc
  steps:
    - add_ssh_keys:
        fingerprints:
          - "3f:83:6f:f1:19:cc:5f:66:91:8f:b7:db:88:11:53:9c"
    - checkout
    - <<: *load_cache
    - <<: *install_nodejs
    - <<: *install_yarn
    - run:
        name: Deploying to GitHub Pages
        command: |
          git config --global user.email "${GITHUB_USERNAME}@users.noreply.github.com"
          git config --global user.name "${GITHUB_USERNAME}"
          export GIT_USER=${GITHUB_USERNAME}
          sudo chown -R $USER:$USER /tmp
          export NVM_DIR="/opt/circleci/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm use 10
          node -v
          sbt docs/docusaurusCreateSite
          sbt docs/mdoc
          cd website && yarn install && USE_SSH=true yarn publish-gh-pages
    - <<: *clean_cache
    - <<: *save_cache

jobs:
  lint:
    <<: *lint
    <<: *machine_ubuntu
    environment:
      - <<: *scala_212
      - <<: *jdk_8
      - <<: *java_options

  test_212_jdk8_jvm:
    <<: *testJVM
    <<: *machine_ubuntu
    <<: *machine_resource
    environment:
      - <<: *scala_212
      - <<: *jdk_8
      - <<: *java_options

  test_212_jdk8_js:
    <<: *testJS
    <<: *machine_ubuntu
    <<: *machine_resource
    environment:
      - <<: *scala_212
      - <<: *jdk_8
      - <<: *java_options

  test_213_jdk8_jvm:
    <<: *testJVM
    <<: *machine_ubuntu
    <<: *machine_resource
    environment:
      - <<: *scala_213
      - <<: *jdk_8
      - <<: *java_options

  test_213_jdk8_js:
    <<: *testJS
    <<: *machine_ubuntu
    <<: *machine_resource
    environment:
      - <<: *scala_213
      - <<: *jdk_8
      - <<: *java_options

  mdoc:
    <<: *mdoc
    <<: *machine_ubuntu
    environment:
      - <<: *scala_212
      - <<: *jdk_8

workflows:
  version: 2
  build:
    jobs:
      - lint
      - mdoc:
          requires:
            - lint
      - test_213_jdk8_jvm:
          requires:
            - lint
      - test_213_jdk8_js:
          requires:
            - lint
      - test_212_jdk8_jvm:
          requires:
            - lint
      - test_212_jdk8_js:
          requires:
            - lint